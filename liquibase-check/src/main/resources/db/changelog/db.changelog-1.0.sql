--liquibase formatted sql

-- changeset dev:1.0-create-person-table-oracle
--precondition-dbms type:oracle
--precondition-sql-check expectedResult:0
SELECT COUNT(*) FROM user_tables WHERE table_name = 'PERSON';
CREATE TABLE person (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(255)
);
-- Insert sample data
INSERT INTO person (name) VALUES ('Alice');
INSERT INTO person (name) VALUES ('Bob');
-- Create index
CREATE INDEX idx_person_name ON person(name);
-- Add unique constraint
ALTER TABLE person ADD CONSTRAINT uq_person_name UNIQUE (name);

-- Add PL/SQL trigger to auto-fill name if null
DECLARE
    v_count NUMBER;
BEGIN
    SELECT COUNT(*) INTO v_count FROM user_triggers WHERE trigger_name = 'PERSON_NAME_DEFAULT_TRG';
    IF v_count = 0 THEN
        EXECUTE IMMEDIATE '
            CREATE OR REPLACE TRIGGER person_name_default_trg
            BEFORE INSERT ON person
            FOR EACH ROW
            BEGIN
                IF :NEW.name IS NULL THEN
                    :NEW.name := ''Unknown'';
                END IF;
            END;';
    END IF;
END;
/

-- changeset dev:1.0-create-person-table-clickhouse
--precondition-dbms type:clickhouse
--precondition-sql-check expectedResult:0
SELECT count() FROM system.tables WHERE name = 'person';
CREATE TABLE person (
    id UInt32,
    name String
) ENGINE = MergeTree()
ORDER BY id;
-- Insert sample data
INSERT INTO person (id, name) VALUES (1, 'Alice');
INSERT INTO person (id, name) VALUES (2, 'Bob');
-- Create index (ClickHouse uses data skipping indexes)
ALTER TABLE person ADD INDEX idx_person_name name TYPE minmax GRANULARITY 1;
-- ClickHouse does not support unique constraints on tables.
